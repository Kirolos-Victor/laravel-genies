<?php

namespace Tests\Feature;

use App\Models\Project;
use App\Models\User;
use Illuminate\Foundation\Testing\RefreshDatabase;
use Illuminate\Foundation\Testing\WithFaker;
use Laravel\Sanctum\Sanctum;
use Tests\TestCase;

class ProjectTest extends TestCase
{
    use RefreshDatabase;

    protected mixed $user;

    public function setUp(): void
    {
        parent::setUp(); // TODO: Change the autogenerated stub
        $this->user = User::factory()->create();;
    }

    public function test_get_projects()
    {
        $this
            ->actingAs($this->user, 'sanctum')
            ->getJson('api/projects')
            ->assertStatus(200);
    }

    public function test_get_project()
    {
        $project = Project::factory()->create();
        Sanctum::actingAs($this->user);
        $response = $this->get('/api/projects/' . $project->id);
        $response->assertStatus(200);
    }

    public function test_store_project()
    {
        Sanctum::actingAs($this->user);
        $formData = [
            'name' => 'test',
            'description' => 'test',
            'status' => 'active',
            'developers' => []

        ];

        $response = $this->post('/api/projects', $formData);
        $response->assertStatus(200);
    }

    public function test_update_project()
    {
        $project = Project::factory()->create();
        Sanctum::actingAs($this->user);
        $formData = [
            'name' => 'update',
            'description' => 'updated',
            'status' => 'suspended',
            'developers' => []
        ];
        $response = $this->put('/api/projects/' . $project->id, $formData);
        $response->assertStatus(200);
    }

    public function test_delete_project()
    {
        $project = Project::factory()->create();
        Sanctum::actingAs($this->user);
        $response = $this->delete('/api/projects/' . $project->id);
        $response->assertStatus(200);
    }
}
